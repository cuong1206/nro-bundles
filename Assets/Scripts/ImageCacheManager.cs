using UnityEngine;
using System.IO;
using System;

public class ImageCacheManager
{
    public static readonly string CacheDir = Path.Combine(Application.persistentDataPath, "ImageCache");

    /// <summary>
    /// L∆∞u ·∫£nh t·ª´ ƒë∆∞·ªùng d·∫´n AssetBundle ho·∫∑c byte[] v√†o persistentDataPath.
    /// </summary>
    public static void SaveImage(string assetPath, string cacheFileName)
    {
        if (!Directory.Exists(CacheDir))
        {
            Directory.CreateDirectory(CacheDir);
        }

        string fullPath = Path.Combine(CacheDir, cacheFileName + ".png");
        try
        {
            Texture2D texture = LoadAssetHelper.Load<Texture2D>(assetPath);
            if (texture != null)
            {
                byte[] bytes = texture.EncodeToPNG();
                File.WriteAllBytes(fullPath, bytes);
                Debug.Log($"‚úÖ ƒê√£ l∆∞u ·∫£nh {assetPath} v√†o {fullPath}");
                UnityEngine.Object.Destroy(texture); // Gi·∫£i ph√≥ng texture ngay
            }
            else
            {
                Debug.LogError($"‚ùå Kh√¥ng th·ªÉ n·∫°p {assetPath} ƒë·ªÉ l∆∞u.");
            }
        }
        catch (Exception ex)
        {
            Debug.LogError($"‚ùå L·ªói l∆∞u ·∫£nh {assetPath}: {ex.Message}");
        }
    }

    /// <summary>
    /// N·∫°p ·∫£nh t·ª´ persistentDataPath v√†o Texture2D t·∫°m th·ªùi.
    /// </summary>
    public static Texture2D LoadImageFromCache(string cacheFileName)
    {
        string fullPath = Path.Combine(CacheDir, cacheFileName + ".png");
        if (File.Exists(fullPath))
        {
            byte[] bytes = File.ReadAllBytes(fullPath);
            Texture2D texture = new Texture2D(2, 2); // K√≠ch th∆∞·ªõc t·∫°m, s·∫Ω resize
            if (texture.LoadImage(bytes))
            {
                Debug.Log($"‚úÖ ƒê√£ n·∫°p ·∫£nh t·ª´ {fullPath}");
                return texture;
            }
            UnityEngine.Object.Destroy(texture);
        }
        Debug.LogError($"‚ùå Kh√¥ng t√¨m th·∫•y file {fullPath}");
        return null;
    }

    /// <summary>
    /// Gi·∫£i ph√≥ng ·∫£nh sau khi d√πng (g·ªçi th·ªß c√¥ng).
    /// </summary>
    public static void ReleaseImage(Texture2D texture)
    {
        if (texture != null)
        {
            UnityEngine.Object.Destroy(texture);
            Resources.UnloadUnusedAssets();
            Debug.Log("üßπ ƒê√£ gi·∫£i ph√≥ng Texture2D.");
        }
    }
}